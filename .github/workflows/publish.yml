name: PyPI Publish

on:
  release:
    types:
      - published

jobs:
  publish:
    runs-on: "ubuntu-latest"
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10.0"

      - name: Get full python version
        id: full-python-version
        run: |
          echo ::set-output name=version::$(python -c "import sys; print('-'.join(str(v) for v in sys.version_info[:3]))")

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Check pyproject.toml validity
        run: poetry check --no-interaction

      - name: Cache dependencies
        id: cache-deps
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-ubuntu-latest-${{ steps.full-python-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}
          restore-keys: venv-ubuntu-latest-

      - name: Install deps
        run: |
          poetry install --no-interaction

      - name: Publish to PyPI
        run: |
          poetry config pypi-token.pypi "${{secrets.PYPI_API_TOKEN}}"
          poetry publish --build
